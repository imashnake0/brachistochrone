The Brachistochrone Problem is one of the earliest problems in the domain of Calculus of Variations. Said problem involved finding the path of least time that a particle subject to the force of gravity could travel through to get to a point A (x0,y0) to a point B which is located under A but not directly underneath (horizontal and negative vertical translation). Johann Bernoulli introduced the problem and asked several influential mathematicians of his age to attempt a solution. Solution to this problem is famously a segment of a “cycloid”. A cycloid is a curve that can be plotted by the rolling a circle. This segment is called a “Brachistochrone”. Several individuals succeeded to find this solution including Isaac Newton who famously solved the problem overnight.  The approaches of these solutions vary vastly. However, the solutions that inspired us for this project were the Euler-Lagrange solution used in Taylor and Mark Levi’s famous “quicker solution”. 

Mark Levi’s solution is special since it does a great job at revealing the “tautochrone” properties of a brachistochrone. This means that along a brachistochrone 2 particles who are some distance apart will reach the bottom at the same time. This reveals a certain symmetry in this path of least time. 

The textbook solution involves finding the Lagrangian of a problem and using the Euler-Lagrange equation to find a DE that can be plotted. The resulting plot, as expected, reveals a brachistochrone. 

Taking these inspirations we decided to make a way to find the path of least time/distance of any arbitrary problems. To achieve this we used the solutions mentioned above to design a computer code written in Python that can take a Lagrangian input which corresponds to a mehcanics problem. And then said code will show you the path of least distance/time. 

To demonstrate this project we needed arbitrary problems. We decided to chose the problems from Mini-Project 1 AMATH 271. And problems from chapter 6 of Taylor. 
